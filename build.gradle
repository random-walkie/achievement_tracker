plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '7.0.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(19)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.4.2'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	runtimeOnly 'com.h2database:h2:2.3.232'
	runtimeOnly 'org.postgresql:postgresql:42.3.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.2'
	testImplementation 'org.mockito:mockito-core:5.15.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.8.2'
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	testCompileOnly 'org.projectlombok:lombok:1.18.36'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
}

spotless {

	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		leadingSpacesToTabs() // or leadingTabsToSpaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// Use the default importOrder configuration
		importOrder()
		removeUnusedImports()
		// Cleanthat will refactor your code, but it may break your style: apply it before your formatter
		cleanthat()
		// formatter
		googleJavaFormat('1.10.0').aosp().reflowLongStrings()
		formatAnnotations()
		licenseHeaderFile 'spotless.license.java'
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
